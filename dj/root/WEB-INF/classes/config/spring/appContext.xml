<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans   
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-3.2.xsd  
		http://www.springframework.org/schema/tx  
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/cache  
		http://www.springframework.org/schema/cache/spring-cache.xsd  
		http://www.springframework.org/schema/aop   
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- Dajie系统配置文件 -->
	<bean id="zmhProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:config/properties/zmh.properties</value>
			</list>
		</property>
		<!-- 设置编码格式 -->
		<property name="fileEncoding" value="UTF-8"></property>
	</bean>


	<!-- 加载配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:config/properties/jdbc.properties</value>
		</property>
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:config/properties/config.properties</value>
			</list>
		</property>
		<!-- 设置编码格式 -->
		<property name="fileEncoding" value="UTF-8"></property>
	</bean>

	<!-- 注解配置 -->
	<context:annotation-config />

	<!-- 扫描net.kingtrans下所有注解 -->
	<context:component-scan base-package="net.*" />

	<!-- druid数据源配置 -->
	<bean id="mainDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="name" value="${jdbc.name}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="initialSize" value="${druid.initialSize}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="poolPreparedStatements" value="${druid.poolPrpdStmts}" />
		<property name="maxOpenPreparedStatements" value="${druid.maxOpPrpdStmts}" />
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBtwnEvctRsMls}" />
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvctbIdTmMls}" />
		<property name="validationQuery" value="${druid.validationQuery}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />
	</bean>

	<!-- spring数据源 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource" ref="mainDataSource" />
	</bean>

	<!-- 配置事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 加载mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:config/mybatis/sqlMapConfig.xml</value>
		</property>
	</bean>

	<!-- 动态代理实现mybatis 不用写dao的实现 -->
	<bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 配置系统线程 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="100" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	
	<!-- 缓存 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="tmoduleCache" />
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="tUserCache" />
			</set>
		</property>
	</bean>

</beans>
